<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd">
	
	<!--spring bean configuration file : 빈 생성 파일  -->
	
	<!--
		1.디폴트생성자
		<bean id="객체명(인스턴스명)" class = "클래스명"/>
		
			 
		2.디폴트 생성자 +setter
		<bean id= "객체명(인스턴스명)" class="클래스명">
			<property name ="필드명1">
				<value>값1</value> //값이 문자 , 숫자 상관없이 그냥 적는다. (따옴표가 없다.)
			</property>
			
			<property name ="필드명2">
				<value>값2</value> //값이 문자 , 숫자 상관없이 그냥 적는다. (따옴표가 없다.)
			</property>
			
		</bean>
				
		
-->
	<!-- 빈생성 1 -->
	<!-- 아래태그를보고 스프링은 다음과 같은 작겅ㅂ을 수행합니다.
		Calculator calculator = new Calculator();
	 -->
	<bean id="calc" class="com.koreait.spring.Calculator"/>
	
	<!-- 빈생성 2 -->
	<!-- 디폴트생성자를 이용한다.  -->
	<!-- property 태그는 setter를 이용한다. -->
	<bean id="myCalculator1" class="com.koreait.spring.MyCalculator">
		<property name="num1">
			<value>120</value>
		</property>
		<property name="num2">
			<value>3</value>
		</property>
		<property name="calculator">
			<ref bean="calc"/>
		</property>
	</bean>
	<!--빈생성2  -->
	<!--
		필드를이용한 생성자
		
		1. 파라미터로 전달되는 필드 값을 constructor-arg태그로 처리한다.
		2. 한 번에 필드 하나씩 처리한다.
		3. 필드가 선언된 순서대로 constructor-arg태그를 작성한다.
	  -->
	  <!-- 
	    Calculator calc = new Calculator();
	  	MyCalculator myCalculator2 = new MyCalculator(100,30 ,new Calculator());
	   -->
	<bean id="myCalculator2" class="com.koreait.spring.MyCalculator">
		<constructor-arg>
			<value>100</value>
		</constructor-arg>
		<constructor-arg>
			<value>30</value>
		</constructor-arg>
		<constructor-arg>
			<ref bean="calc"/>
		</constructor-arg>
	</bean>
	
</beans>




















