세션 (session)
	1. 사용자가 웹 브라우저를 시작해서 닫을때까지 세션 정보는 유지된다.
	2. 서버측에 직접 세션 데이터를 저장하고, 저장된 세션의 키 값만을 웹 브라우저(클라이언트)에 남겨둔다.
	3. 클라이언트는 웹 브라우저에 저장된 세션의 키 값을 이용해 서버에 저장된 세션 데이터를 사용한다.
	4. 보안에 취약한 쿠키(Cookie)를 보완하는 역할을 수행한다.
	5. HttpSession 클래스 타입이다.
	6. session은 JSP 내장객체이기 때문에 JSP에서는 바로 사용한다.
	7. JSP 이외 영역에서는 request 에서 session 정보를 알아내서(getSession) 사용한다. 
	8. 주요 사용 방법
		1) 세션에 데이터 저장하기			session.setAttribute("속성", "값");
		2) 세션에 저장된 데이터 불러오기	session.getAttribute("속성");
		3) 세션에 저장된 데이터 삭제하기	session.removeAttribute("속성");
		4) 세션에 저장된 데이터 초기화하기	session.invalidate();
		5) 세션에 저장된 정보 소멸시키기
			(1) session.setMaxInactiveInterval(n);	// n초 후 소멸된다.
			(2) web.xml 에 작성
				* 작성 방법
					<web-app>
						<session-config>
							<session-timeout>n</session-timeout>  // n분 후 소멸된다.
						</session-config>
					</web-app>
			(3) Tomcat의 기본 값은 30분으로 설정되어 있다.
		6) 세션 알아내기
			HttpSession session = request.getSession();
	9. 동작방식
		1) 웹 브라우저가 처음 접속하면 Tomcat 이 response 헤더에 JSESSIONID 값을 발급한다.
		2) 발급된 JSESSIONID 값은 웹 브라우저의 쿠키(Cookie)로 저장된다.
		3) 재접속시 웹 브라우저가 발급 받은 JSESSIONID 값을 request 헤더에 넣어 서버에 요청하면 서버는 새로운 JSESSIONID 를 발급하지 않는다.
 		4) 서버는 JSESSIONID 값을 통해 동일한 사용자 접근인지 아닌지 여부를 판단한다.
		