JSP
	1. Java Server Page
	2. HTML 문서내에서 JAVA 코드를 사용할 수 있는 서블릿(Servlet) 기반의 서버측 스크립트이다.
	3. 모든 JSP 페이지는 Servlet으로 변환된다.
	4. 동작 순서
		abc.jsp -> abc_jsp.java (servlet) -> abc_jsp.class -> run
	5. Model-1 : 모든 작업을 JSP 페이지에서 처리한다.
	6. Model-2 : View 는 JSP 로 처리하고, Logic 은 JAVA 또는 Servlet 으로 처리한다.


JSP 스크립트 요소
	1. <%@ 지시어 %> : 지시어 (directive)
	2. <%! 선언부 %> : 선언부 (declaration), 전역변수 선언, 메소드 정의(만들기)
	3. <%= 표현식 %> : 표현식 (expression), 값 출력(변수, 메소드 리턴)
	4. <% 스크립트릿 %> : 스크립트릿 (scriptlet), 일반 JAVA 코드


JSP 주석
	1. <!-- HTML 주석 --> : 소스보기에서 보인다.
	2. <%-- JSP 주석 --%> : 소스보기에서 안 보인다.
	

지시어 (directive)
	1. page 지시어 <%@ page %>
		1) 현재 페이지에 대한 속성 정보를 저장한다.
		2) WAS 가 page 지시어를 보고 해당 페이지를 처리한다.
		3) 속성
			(1) language		사용되는 언어			<%@ page language="java" %>
			(2) contentType		문서 형식, 인코딩		<%@ page contentType="text/html; charset=utf-8" %>
			(3) pageEncoding	인코딩					<%@ page pageEncoding="utf-8" %>
			(4) import			자바클래스 import		<%@ page import="java.util.Calendar" %>
			(5) session			세션 사용 여부			<%@ page session="true" %>
			(6) buffer			출력 버퍼의 크기		<%@ page buffer="8KB" %>
			(7) autoFlush		출력 버퍼가 가득차면	<%@ page autoFlush="true" %>
								자동으로 내보기 여부 
			(8) errorPage		에러가 발생하면 호출할	<%@ page errorPage="error.jsp" %>
								페이지를 지정
			(9) isErrorPage		현재 페이지의			<%@ page isErrorPage="false" %>
								에러 페이지 여부
	2. taglib 지시어 <%@ taglib %>
		1) JSP 기능 확장을 위한 태그라이브러리 정보를 지정한다.
		2) JSTL 에서 사용한다.
		3) 형식
			<%@ taglib url ="http://java.sun.com/jsp/jstl/core" prefix="c"%>
	
	
	3. include 지시어 <%@ include %>
		1)현재 페이지에 다른페이지를 포함시킬때 사용한다.
		2)정적인 페이지 (변화가 없는 페이지)를 포함 시킬때 사용한다.
		3)형식
			<%@ include file ="footer.jsp%>

JSP 기본 객체	
	1.request:요청정보
	2.response:응답정보
	3.out :출력스트림
	4.page : jsp페이지의 서블릿 객체
	5. pageContext: 페이지 실행에 필요한 context 정보를 저장한 객체
	6. session : 세션
	7.application : 모든 페이지가 공유할 데이터를 저장한 객체
	8.config:서블릿 설정시 데이터 초기화 정보를 저장한 객체
	9.exception : 예외
	
JSP 4가지 영역
	1. 데이터를 저장하는 4개의 내장객체가 있다. (4개의 영역이 있다.)
	2. 각 내장객체는  데이터를 저장한는 생명주기(Life Cycle)가 다르다.
	3. 종류
		1) pageContext
			(1) 한페이지에서 사용되는 영역이다.
			(2) 해당페이지를 벗어나면 데이터가 소멸된다.
		2) request
			(1) 한 요청을 처리할때 사용되는 영역이다.
			(2)	response 가 되면 데이터가 소멸된다.(일회용)
		3)session
			(1)한 웹 브라우저가 사용하는 영역			
			(2)웹 브라우저를 닫으면 데이터가 소멸된다.
		4)application  ex)누적방문자수
			(1)한 웹플리케이션에서 사용하는 영역이다.
			(2)웹 애플리케이션을 종료하면 데이터가 소멸된다.
		
	
	
	
	
	
	

	
	
	